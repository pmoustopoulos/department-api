version: "3.0"

services:
  postgresdb:
    image: postgres
    container_name: postgresdb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d mydb -U postgres" ]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - springboot-postgres-net

  departmentapi:
    container_name: departmentapi
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - springboot-postgres-net
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresdb:5432/mydb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EMAIL_HOST: mailhog
    restart: on-failure

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - springboot-postgres-net
    restart: always

  postgres-sonarqube:
    image: postgres
    container_name: postgres_sonar
    restart: always
    environment:
      POSTGRES_DB: sonar
      POSTGRES_HOST: sonar_postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: p.postgres
      POSTGRES_ROOT_PASSWORD: root
    ports:
      - "5433:5432"
    volumes:
      - ./postgres/data:/var/lib/postgresql/data 700

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=p.sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp



networks:
  sonar:
  springboot-postgres-net:
    driver: bridge
volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
