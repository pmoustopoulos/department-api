{
  "openapi" : "3.1.0",
  "info" : {
    "title" : "Department API",
    "description" : "Active profile: DEFAULT",
    "version" : "2.8.5"
  },
  "servers" : [ {
    "url" : "http://192.168.1.11:8080/department-api",
    "description" : "Generated server url"
  } ],
  "paths" : {
    "/api/v1/departments/{id}" : {
      "get" : {
        "tags" : [ "department-controller" ],
        "summary" : "Find department by ID",
        "description" : "Returns a single department",
        "operationId" : "getDepartmentById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseDepartmentDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "department-controller" ],
        "summary" : "Update an existing department",
        "operationId" : "updateDepartment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DepartmentRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseDepartmentDTO"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "department-controller" ],
        "summary" : "Delete a department by ID",
        "operationId" : "deleteDepartment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/{departmentId}/employees/{employeeId}" : {
      "get" : {
        "tags" : [ "employee-controller" ],
        "summary" : "Find employee by ID belonging to the specific department",
        "description" : "Returns a single employee belonging to the specific department",
        "operationId" : "getEmployeeById",
        "parameters" : [ {
          "name" : "departmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "employeeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseEmployeeDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "employee-controller" ],
        "summary" : "Update an existing employee belonging to the specific department",
        "operationId" : "updateEmployeeById",
        "parameters" : [ {
          "name" : "departmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "employeeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmployeeRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseEmployeeDTO"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "employee-controller" ],
        "summary" : "Delete an employee belonging to the specific department",
        "operationId" : "deleteEmployee",
        "parameters" : [ {
          "name" : "departmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "employeeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseString"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees/search" : {
      "post" : {
        "tags" : [ "employee-controller" ],
        "summary" : "Search all employees from all departments using pagination",
        "description" : "Returns a list of employees belonging to any department",
        "operationId" : "getAllEmployeesUsingPagination",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmployeeSearchCriteriaDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponsePageEmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments" : {
      "post" : {
        "tags" : [ "department-controller" ],
        "summary" : "Add a new department",
        "operationId" : "createDepartment",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DepartmentRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/{departmentId}/employees" : {
      "get" : {
        "tags" : [ "employee-controller" ],
        "summary" : "Find all employees belonging to the specific department",
        "description" : "Returns a list of employees belonging to the specific department",
        "operationId" : "getEmployeesByDepartmentId",
        "parameters" : [ {
          "name" : "departmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseListEmployeeDTO"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "employee-controller" ],
        "summary" : "Add a new employee to the specific department",
        "operationId" : "createEmployee",
        "parameters" : [ {
          "name" : "departmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EmployeeRequestDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseEmployeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/search" : {
      "post" : {
        "tags" : [ "department-controller" ],
        "summary" : "Search all departments using pagination",
        "description" : "Returns a list of departments",
        "operationId" : "getAllDepartmentsUsingPagination",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DepartmentSearchCriteriaDTO"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponsePageDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/zip" : {
      "get" : {
        "tags" : [ "report-controller" ],
        "summary" : "Generate a zip file which contains two excel reports",
        "operationId" : "generateAndZipReports",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/pdf/full-report" : {
      "get" : {
        "tags" : [ "report-controller" ],
        "summary" : "Generate a PDF report containing all the departments along with all the employees in the specified language",
        "operationId" : "generatePdfFullReport",
        "parameters" : [ {
          "name" : "language",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "EN", "ES", "DE", "EL" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/pdf/combined-report" : {
      "get" : {
        "tags" : [ "report-controller" ],
        "summary" : "Generate a combined PDF report from two separate reports in the specified language",
        "operationId" : "generateCombinedPdfReport",
        "parameters" : [ {
          "name" : "language",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "EN", "ES", "DE", "EL" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/multi-sheet-excel" : {
      "get" : {
        "tags" : [ "report-controller" ],
        "summary" : "Generate a multi-sheet Excel report containing departments and employees",
        "operationId" : "generateMultiSheetExcelReport",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/excel/employees" : {
      "get" : {
        "tags" : [ "report-controller" ],
        "summary" : "Generate an Excel report containing all the employees",
        "operationId" : "generateEmployeesExcelReport",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reports/excel/departments" : {
      "get" : {
        "tags" : [ "report-controller" ],
        "summary" : "Generate an Excel report containing all the departments",
        "operationId" : "generateDepartmentsExcelReport",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/employees" : {
      "get" : {
        "tags" : [ "employee-controller" ],
        "summary" : "Get an employee along with the department using the employee email. Note: This endpoint was created just to demonstrate how to get a child and a parent object using the child's property",
        "operationId" : "getEmployeeAndDepartmentByEmployeeEmail",
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseEmployeeAndDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emails" : {
      "get" : {
        "tags" : [ "email-controller" ],
        "operationId" : "sendEmailWithoutAttachment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseBoolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/emails/with-attachment" : {
      "get" : {
        "tags" : [ "email-controller" ],
        "operationId" : "sendEmailWithAttachment",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/APIResponseBoolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "DepartmentRequestDTO" : {
        "type" : "object",
        "properties" : {
          "departmentCode" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 2
          },
          "departmentName" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 2
          },
          "departmentDescription" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 10
          }
        },
        "required" : [ "departmentCode", "departmentDescription", "departmentName" ]
      },
      "APIResponseDepartmentDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          },
          "results" : {
            "$ref" : "#/components/schemas/DepartmentDTO"
          }
        }
      },
      "DepartmentDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "departmentCode" : {
            "type" : "string"
          },
          "departmentName" : {
            "type" : "string"
          },
          "departmentDescription" : {
            "type" : "string"
          },
          "employees" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmployeeDTO"
            },
            "uniqueItems" : true
          }
        }
      },
      "EmployeeDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "salary" : {
            "type" : "number"
          }
        }
      },
      "ErrorDTO" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          }
        }
      },
      "EmployeeRequestDTO" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 2
          },
          "lastName" : {
            "type" : "string",
            "maxLength" : 2147483647,
            "minLength" : 2
          },
          "email" : {
            "type" : "string"
          },
          "salary" : {
            "type" : "number"
          }
        },
        "required" : [ "email", "firstName", "lastName" ]
      },
      "APIResponseEmployeeDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          },
          "results" : {
            "$ref" : "#/components/schemas/EmployeeDTO"
          }
        }
      },
      "EmployeeSearchCriteriaDTO" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 0
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 10
          },
          "sortList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortItem"
            }
          }
        },
        "required" : [ "page", "size" ]
      },
      "SortItem" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "example" : "id"
          },
          "direction" : {
            "type" : "string",
            "enum" : [ "ASC", "DESC" ]
          }
        }
      },
      "APIResponsePageEmployeeDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          },
          "results" : {
            "$ref" : "#/components/schemas/PageObject"
          }
        }
      },
      "PageObject" : {
        "type" : "object",
        "properties" : {
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "first" : {
            "type" : "boolean"
          },
          "last" : {
            "type" : "boolean"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmployeeDTO"
            }
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageable" : {
            "$ref" : "#/components/schemas/PageableObject"
          },
          "empty" : {
            "type" : "boolean"
          }
        }
      },
      "PageableObject" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "$ref" : "#/components/schemas/SortObject"
          },
          "paged" : {
            "type" : "boolean"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unpaged" : {
            "type" : "boolean"
          }
        }
      },
      "SortObject" : {
        "type" : "object",
        "properties" : {
          "empty" : {
            "type" : "boolean"
          },
          "sorted" : {
            "type" : "boolean"
          },
          "unsorted" : {
            "type" : "boolean"
          }
        }
      },
      "DepartmentSearchCriteriaDTO" : {
        "type" : "object",
        "properties" : {
          "departmentCode" : {
            "type" : "string"
          },
          "departmentName" : {
            "type" : "string"
          },
          "departmentDescription" : {
            "type" : "string"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 0
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 10
          },
          "sortList" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortItem"
            }
          }
        },
        "required" : [ "page", "size" ]
      },
      "APIResponsePageDepartmentDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          },
          "results" : {
            "$ref" : "#/components/schemas/PageObject"
          }
        }
      },
      "APIResponseEmployeeAndDepartmentDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          },
          "results" : {
            "$ref" : "#/components/schemas/EmployeeAndDepartmentDTO"
          }
        }
      },
      "EmployeeAndDepartmentDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "salary" : {
            "type" : "number"
          },
          "department" : {
            "$ref" : "#/components/schemas/DepartmentDTO"
          }
        }
      },
      "APIResponseBoolean" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          },
          "results" : {
            "type" : "boolean"
          }
        }
      },
      "APIResponseListEmployeeDTO" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EmployeeDTO"
            }
          }
        }
      },
      "APIResponseString" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDTO"
            }
          },
          "results" : {
            "type" : "string"
          }
        }
      }
    }
  }
}